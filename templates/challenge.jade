extends frame
{% load staticfiles %}

mixin challengeList(clg, url)
  tr(style='display: none;')
    td.text-center: a(href=url)= clg.title
    td.text-center= clg.source
    td.text-center= clg.category
    td.text-center= clg.score
    td.text-center= clg.solved
    if clg.status == 'on'
      td.text-center: input(type='checkbox', checked, disabled)
    if clg.status == 'off'
      td.text-center: input(type='checkbox', disabled)
    if clg.status == 'ton'
      td.text-center: input(type='checkbox', checked)
    if clg.status == 'toff'
      td.text-center: input(type='checkbox')
    if clg.state == 0
      td.text-center(data-toggle='tooltip', data-placement='bottom', title='Attempted')
        i.fa.fa-thumb-tack
    if clg.state == 1
      td.text-center(data-toggle='tooltip', data-placement='bottom', title='Solved')
        i.fa.fa-flag
    if clg.state == 2
      td.text-center(data-toggle='tooltip', data-placement='bottom', title='Team-Solved')
        i.fa.fa-flag-checkered
    if clg.state == -1
      td.text-center &nbsp;

block container
  .row
    .col-md-12
      .panel.panel-default
        .panel-heading
          | Challenge List
          .btn-group.pull-right
            button#btnALL.btn.btn-xs ALL
            button#btnPWN.btn.btn-primary.btn-xs PWN
            button#btnREVERSE.btn.btn-success.btn-xs REVERSE
            button#btnWEB.btn.btn-danger.btn-xs WEB
            button#btnCRYPTO.btn.btn-info.btn-xs CRYPTO
            button#btnMISC.btn.btn-warning.btn-xs MISC
            button#btnAttempted.btn.btn-xs Attempted
        table.table.table-hover
          thead
            tr
              th.text-center Title
              th.text-center Source
              th.text-center Category
              th.text-center Score
              th.text-center Solved
              th.text-center Status
              th
          tbody
            for item in challenges
              +challengeList(item, item.url)
      .btn-group.pull-right
        button#pagerPrev.btn.btn-primary(data-page='0'): i.fa.fa-long-arrow-left
        button#pagerNext.btn.btn-primary(data-cate='all'): i.fa.fa-long-arrow-right


append script
  script(src='{% static "assets/bootflat/js/bootstrap-switch.min.js" %}')
  script(src='{% static "build/challenge.js" %}')
  // script.
  //   $.fn.bootstrapSwitch.defaults.size = 'mini';
  //   $.fn.bootstrapSwitch.defaults.onColor = 'info';

  //   $(function () {
  //     $('[data-toggle="tooltip"]').tooltip();
  //     $('input[type="checkbox"]').bootstrapSwitch({
  //       // size: 'mini',

  //       onSwitchChange: function(event, state) {
  //         $(this).bootstrapSwitch('toggleIndeterminate');
  //         $(this).bootstrapSwitch('toggleDisabled');
  //       }
  //     });

  //     // alert($('#wtf').bootstrapSwitch('state'))
  //   });

append head
  link(rel='stylesheet' href='{% static "assets/bootflat/css/bootstrap-switch.min.css" %}')
