// Generated by CoffeeScript 1.10.0
(function() {
  $(function() {
    var editor;
    $('a[href$="writeup/"]').addClass('current');
    Simditor.locale = 'en-US';
    editor = new Simditor({
      textarea: $('#editor'),
      toolbar: ['title', 'bold', 'italic', 'strikethrough', '|', 'ol', 'ul', 'blockquote', 'code', 'table', '|', 'link', 'hr', '|', 'markdown'],
      toolbarFloatOffset: $('nav').height()
    });
    if ($('#submitBtn').data('state')) {
      editor.setValue($('#contentHolder').text());
      $('#title').val($('#titleHolder').text());
    }
    $('#uploadBtn').on('click', function() {
      if ($('#imageName').val().length === 0) {
        return;
      }
      return $.ajaxFileUpload({
        url: '/writeup/uploadImage/',
        secureurl: false,
        fileElementId: 'imageFile',
        dataType: 'json',
        success: function(data) {
          var $li, li;
          if (data.msg === 'okay') {
            $('#uploadSuccess').fadeIn();
            li = '<li class="list-group-item"><a class="btn btn-xs btn-link pull-right" data-toggle="tooltip" data-placement="right" title="click to insert" data-path data-name><i class="fa fa-share-square-o"></i></a><p></p></li>';
            $('ul.list-group').append(li);
            $li = $('ul.list-group li').last();
            $li.find('p').text($('#imageName').val());
            $li.find('a').attr('data-path', data.path);
            $li.find('a').attr('data-name', $('#imageName').val());
            $('[data-toggle="tooltip"]').tooltip();
            $('a.btn.btn-xs.btn-link').on('click', function() {
              var content;
              content = '![' + ($(this).data('name')) + '](' + ($(this).data('path')) + ')';
              return insertAtCursor($('textarea')[0], content);
            });
            return window.setTimeout("$('#uploadSuccess').fadeOut()", 1000);
          }
        }
      });
    });
    $('#submitBtn').on('click', function() {
      var challenge;
      if ($(this).data('state')) {
        challenge = $('#challengeHolder').text();
      } else {
        challenge = $('#CList').val();
      }
      console.log(challenge);
      if ($('#title').val() && challenge) {
        $(this).attr('disabled', 'disabled');
        $('i.fa-spiner').show();
        return $.ajax({
          url: '/writeup/submit/',
          type: 'post',
          dataType: 'json',
          data: {
            title: $('#title').val(),
            challenge: challenge,
            content: editor.getValue()
          },
          success: (function(_this) {
            return function(data) {
              $('i.fa-spiner').hide();
              $(_this).removeAttr('disabled');
              if (data.msg === 'okay') {
                $('#submitSuccess').fadeIn();
                return window.setTimeout("location.href='/writeup/" + data.pk + "/'", 1000);
              } else {
                $('#submitFail').fadeIn();
                return window.setTimeout("$('#submitFail').fadeOut()", 1000);
              }
            };
          })(this)
        });
      }
    });
    $('#SList').on('change', function() {
      var val;
      $('#CList').empty();
      val = $(this).val();
      return $.ajax({
        url: '/writeup/getChallenges/',
        type: 'post',
        dataType: 'json',
        data: {
          title: val
        },
        success: function(data) {
          var i, item, len, ref, results;
          if (data.msg === 'okay') {
            ref = data.challenges;
            results = [];
            for (i = 0, len = ref.length; i < len; i++) {
              item = ref[i];
              results.push($('#CList').append("<option value=" + item.pk + ">" + item.name + "</option>"));
            }
            return results;
          }
        }
      });
    });
    return stickFooter();
  });

}).call(this);
